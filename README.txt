Pipeline technology is the kernel technology of modern CPU design and constitutes the key of the CPU efficiency. The RISC (Reduced Instruction Set Computing) architecture is a technology developed in the early 1980s, having as main characteristic the execution of Pipelining. Pipeline is the fundamental invisible to user technique, which aims to the optimization of the speed execution and is used indirectly by high level language programming mainly in embedded systems. MIPS (Microprocessor without Interlocked Pipeline Stages) architecture is a typical representative of RISC which can successfully and easily Pipeline technique, takes place. This Project demonstrates the technique of Pipelining in a RISC type processor, on an ALTERA FPGA (Field Programmable Gate Array) using Quartus and VHDL. We are also dealing with the problems that appear in one such type technique and demonstrate the solutions avoiding them. The comparative flow of this paper allows us to understand why pipelining is preferable to other possible implementation techniques. 
The first part of the project is developed for understanding the necessary theoretical background concerning MIPS, which is part of the RISC architecture, while developing analytical technical details of Pipelining. The second part is the design of a 32 - bit MIPS processor single - cycle execution enriched commands set, using VHDL hardware description language while attach the simulation results of test bench programs using modelsim tool. The last stage contains the reconstruction of the 32 - bit MIPS processor, applying the Pipeline technique and also enabling the VGA controller to attach the results of each register graphically to the monitor. Parts of the main code are inspired from James O. Hamblen’s Book Rapid_Prototyping_of_Digital_Systems_SOPC_Edition (Chapter 14).